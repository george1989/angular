apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: OpenShift template
    tags: "instant-${APP_NAME},${APP_NAME}"
  name: ${APP_NAME}
parameters:
  - displayName: App name
    name: APP_NAME
    required: true
    value: ""
  - displayName: App version
    name: APP_VERSION
    required: true
    value: ""
  - name: AMBIENTE
    required: true
    value: ""
  - name: REGISTRY
    required: true
    value: ""
  - name: TRANSFORMADORES_CAPACITY
    value: "1Gi"
message: "App access URL: https://${APP_NAME}-${OPENSHIFT_NAMESPACE}-${AMBIENTE}.${OPENSHIFT_DOMAIN_NAME}"
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
spec:
  replicas: 1
  selector:
    app: ${APP_NAME}
    deploymentconfig: ${APP_NAME}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
    spec:
      containers:
      - env:
        - name : TZ
          value: America/Guayaquil
        - name: APP_NAME
          value: "${APP_NAME}"
        - name: APP_VERSION
          value: "${APP_VERSION}"
        - name: AMBIENTE
          value: "${AMBIENTE}"
        image: ${REGISTRY}
        imagePullPolicy: Always
        name: ${APP_NAME}
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: ${CPU_LIM}
            memory: ${MEM_LIM}
          requests:
            cpu: ${CPU_REQ}
            memory: ${MEM_REQ}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers:
    - type: ConfigChange
  test: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
spec:
  ports:
  - name: 80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    deploymentconfig: ${APP_NAME}
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
spec:
  host: ${APP_NAME}-${OPENSHIFT_NAMESPACE}-${AMBIENTE}.${OPENSHIFT_DOMAIN_NAME}.${OPENSHIFT_DOMAIN}
  port:
    targetPort: 80-tcp
  tls:
    termination: edge
  to:
    kind: Service
    name: ${APP_NAME}
    weight: 100
  wildcardPolicy: None
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}
spec:
  scaleTargetRef:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    name: ${APP_NAME}
  minReplicas: ${MIN_REPLICA}
  maxReplicas: ${MAX_REPLICA}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: ${AVE_CPU}
          type: Utilization
    - type: Resource
      resource:
        name: memory
        target:
          averageUtilization: ${AVE_MEMORY}
          type: Utilization

